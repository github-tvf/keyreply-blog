{"version":3,"sources":["webpack:///./src/components/LoginForm.js","webpack:///./src/components/RegisterForm.js","webpack:///./src/routes/Authentication/components/AuthenticationView.js","webpack:///./src/routes/Authentication/index.js"],"names":["HomeView","callbackLogin","useState","loginEmail","setLoginEmail","loginPassword","setLoginPassword","onSubmit","e","preventDefault","id","className","htmlFor","type","placeholder","required","value","onChange","target","minLength","RegisterForm","parentCallback","callbackRegister","registerPassword","setRegisterPassword","registerConfirmPass","setRegisterConfirmPass","registerEmail","setRegisterEmail","alert","setCustomValidity","confirmPassCheck","AuthenticationView","doLogin","doRegister","form","headline","descreption","title","isRunAnimation","currentForm","setCurrentForm","login","setLogin","onclickSetForm","LoginForm","onClick","dangerouslySetInnerHTML","__html","href","mapDispatchToProps","connect","state","currentUser"],"mappings":"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","file":"js/11.7a57497c9efc7d387b91.js","sourcesContent":["import React, { useState } from 'react'\nconst HomeView = ({callbackLogin  }) => {\n  const [loginEmail, setLoginEmail] = useState('')\n  const [loginPassword, setLoginPassword] = useState('')\n  const onSubmitForm = () => {\n    callbackLogin(loginEmail,loginPassword)\n  }\n  return (\n    <>\n      <form onSubmit={e => {\n        e.preventDefault()\n        onSubmitForm()\n      }} id=\"loginForm\">\n        <div className=\"signin__form--control\">\n          <label htmlFor=\"loginEmail\">Email</label>\n          <input type=\"email\" className=\"sign__control\" placeholder=\"sample@domain.com\" required id=\"loginEmail\" value={loginEmail}\n            onChange={e => setLoginEmail(e.target.value)} />\n        </div>\n        <div className=\"signin__form--control\">\n          <label htmlFor=\"loginPass\">Password</label>\n          <input type=\"password\" className=\"sign__control\" placeholder=\"******\" required minLength=\"6\" id=\"loginPass\" value={loginPassword}\n            onChange={e => setLoginPassword(e.target.value)} />\n        </div>\n        <button type=\"submit\" className=\"btn btn--round btn--orange\">Login</button>\n      </form>\n    </>\n  );\n};\n\nexport default HomeView;\n","import React, { useState } from 'react'\nconst RegisterForm = ({ parentCallback,callbackRegister  }) => {\n  const [registerPassword, setRegisterPassword] = useState('')\n  const [registerConfirmPass, setRegisterConfirmPass] = useState('')\n  const [registerEmail, setRegisterEmail] = useState('')\n  const confirmPassCheck = (e) => {\n    if (registerPassword !== e.target.value) {\n      e.target.setCustomValidity(\"passwords does not Match\");\n    } else {\n      e.target.setCustomValidity(\"\");\n    }\n    setRegisterConfirmPass(e.target.value)\n  }\n  const onSubmitForm = () => {\n    callbackRegister(registerEmail,registerPassword);\n    alert('Register Success')\n    setRegisterPassword('');\n    setRegisterConfirmPass('');\n    setRegisterEmail('');\n  }\n  return (\n    <>\n      <form onSubmit={e => {\n        e.preventDefault()\n        onSubmitForm()\n      }} id=\"registerForm\">\n        <div className=\"signin__form--control\">\n          <label htmlFor=\"\">Email</label>\n          <input type=\"email\" className=\"sign__control\" placeholder=\"sample@domain.com\" required id=\"regsiterEmail\" value={registerEmail}\n            onChange={e => setRegisterEmail(e.target.value)}/>\n        </div>\n        <div className=\"signin__form--control\">\n          <label htmlFor=\"\">Password</label>\n          <input type=\"password\" className=\"sign__control\" placeholder=\"******\" required minLength=\"6\" value={registerPassword}\n            onChange={e => setRegisterPassword(e.target.value)} id=\"regsiterPass\" />\n        </div>\n        <div className=\"signin__form--control\">\n          <label htmlFor=\"\">Confirm Password</label>\n          <input type=\"password\" className=\"sign__control\" placeholder=\"******\" onChange={e => confirmPassCheck(e)} required minLength=\"6\" value={registerConfirmPass} id=\"regsiterConfirm\" />\n        </div>\n        <button type=\"submit\" className=\"btn btn--round btn--black\">Create</button>\n      </form>\n    </>\n  );\n};\n\nexport default RegisterForm;\n","import React, { useState } from 'react'\nimport LoginForm from 'components/LoginForm'\nimport RegisterForm from 'components/RegisterForm'\nimport {\n  doRegister,\n  doLogin,\n} from '../modules/actions'\nconst AuthenticationView = ({doLogin,doRegister}) => {\n  const [currentForm, setCurrentForm] = useState({\n    form: \"login\",\n    headline: \"Hello There\",\n    descreption: \"<span> Don't have a account? <br />Sign up with us today!</span>\",\n    title: \"Sign In\",\n    isRunAnimation: false\n  });\n  const [login, setLogin] = useState(false)\n  const onclickSetForm = (form) => {\n    setCurrentForm({\n      headline: (form == 'login') ? 'Hello There' : 'Let get you started',\n      descreption: (form == 'login') ? \"<span> Don't have a account? <br />Sign up with us today!</span>\" : \"<span>Be part of our awesome <br/> team and have fun with us</span>\",\n      form: form,\n      isRunAnimation: true,\n    });\n  };\n  const callbackResponse = (value) => {\n    setLogin(value)\n  }\n  return (\n    <>\n      <div className=\"authen-form\">\n        <div className={`container ${login ? 'form__success' : ''}`}>\n          <div className=\"form__success\"></div>\n          <div className={`account__container ${currentForm.form == 'login' ? 'login-form' : 'register-form'} \n        ${currentForm.form == 'login' && currentForm.isRunAnimation ? 'login-form-animated' : ''}`}>\n            <div className=\"signin__form\">\n              <h4 className=\"signin__form--headline\">{currentForm.title}</h4>\n              {\n                currentForm.form == 'login' ? (\n                  <LoginForm callbackLogin={doLogin}/>\n                ) : (\n                  <RegisterForm parentCallback={callbackResponse} callbackRegister={doRegister}/>\n                )\n              }\n\n              <div className=\"signin__form--note\">\n                {\n                  currentForm.form == 'login' ? (\n                    <button className=\"link link--underline\" onClick={() => onclickSetForm('register')}>Create account</button>\n                  ) : (\n                    <button className=\"link link--underline\" onClick={() => onclickSetForm('login')}>Already have an account</button>\n                  )\n                }\n              </div>\n            </div>\n            <div className=\"note__form\">\n              <div className=\"note__content\">\n                <h2 className=\"note__content--headline\">{currentForm.headline}</h2>\n                <p className=\"note__content--descreption\" dangerouslySetInnerHTML={{ __html: currentForm.descreption }}></p>\n              </div>\n            </div>\n            {\n              login &&\n              <div className=\"text-center\">\n                <a href=\"#\" className=\"btn btn--round btn--orange\" onClick={e => {\n                  e.preventDefault()\n                  setLogin(false)\n                }}>Logout</a>\n              </div>\n            }\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default AuthenticationView;\n","import { connect } from 'react-redux';\nimport AuthenticationView from './components/AuthenticationView';\nimport {\n  doRegister,\n  doLogin,\n} from './modules/actions'\n\nconst mapDispatchToProps = {\n  doRegister,\n  doLogin,\n}\n\nconst mapStateToProps = (state) => ({\n  currentUser: state.currentUser,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthenticationView);\n"],"sourceRoot":""}